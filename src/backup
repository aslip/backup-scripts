#!/bin/bash
#
# makes full backup of all sensitive file and db data
#


set -e

usage() {
    cat << EOF
usage:
    ${0##*/} SRV_ID [IS_INCR]

makes full or incremental (if IS_INCR is set) backup 
of all sensitive files and databases

options are read from a dir specified by BACKUP_OPTIONS variable
i.e.
    BACKUP_OPTIONS=~/backup-options/ ${0##*/} wmdemo

Examples

full file and db backup:
    ${0##*/} wmdemo

incremental file and db backup:
    ${0##*/} wmdemo incr
EOF
    exit 1
}

MY_DIR=`dirname "$(readlink -f "$0")"`
. "$MY_DIR/functions"

# examples:
#   backup_files /var/log var-log
backup_files() {
    local SRC=$1
    local DST=$2

    backup-files "$SRC" "$DST" "$DATE" "$PREV_DATE"
}

# examples:
#   backup_db kartawm user pass
#   backup_db kartawm user - --ignore-table=kartawm.some_table
backup_db() {
    local DB=$1
    local USER=$2
    local PASS=$3
    local EXCLUDE_TABLES=$4
    local XTRA_OPT=$5 

    local IGNORE_TABLE_OPT=`make_ignore_table_option "$EXCLUDE_TABLES" "$DB"`

    backup-db "$DB" "$USER" "$PASS" "$DATE" "$PREV_DATE" \
        "$IGNORE_TABLE_OPT $XTRA_OPT"
}

scp_all() {
    # see http://dennisthomsen.dk/2010/07/scp-ambiguous-target/
    # basically, if scp destination has spaces, they should be escaped by backslash
    local ESCAPED_SRV_ID=`echo "$SRV_ID" | perl -pe 's/ /\\\\ /g'` # backslash should be quoted inside backquotes
    # copy recursively; - this is the only way to make dirs with scp
    # preserve access times, modify times, modes etc;
    scp -rp "$TMP_DIR/$DATE" "$SERVER:/$ESCAPED_SRV_ID"
}

get_last_backup_date() {
    cat "$TMP_DIR/.last"
}

set_last_backup_date() {
    echo "$1" > "$TMP_DIR/.last"
}

SRV_ID=$1
IS_INCR=$2
DATE=${DATE:-`date -I`}     # use supplied date (helps in auto testing) or the current date in YYYY-MM-DD format
PREV_DATE=-                 # full backup by default

if [[ -z $SRV_ID ]]; then
    usage
fi

BACKUP_OPTIONS=${BACKUP_OPTIONS:-"."}

. "$BACKUP_OPTIONS/options"

if [[ $IS_INCR ]]; then # incremental backup
    PREV_DATE=`get_last_backup_date`
fi

# always backup db first!
# we can tolerate files that are ahead of db, but
# we can't tolerate db that is ahead of files
. "$BACKUP_OPTIONS/backup-db"
. "$BACKUP_OPTIONS/backup-files"
scp_all

set_last_backup_date "$DATE"

